<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE urlrewrite PUBLIC "-//tuckey.org//DTD UrlRewrite 4.0//EN"
        "http://www.tuckey.org/res/dtds/urlrewrite4.0.dtd">

<!--

    Configuration file for UrlRewriteFilter
    http://www.tuckey.org/urlrewrite/

-->
<urlrewrite use-context="false">
    
    <rule enabled="true" match-type="wildcard">
        <name>selectedLanguageIsDefault</name>
        <note>Runs method and sets atribute 'selectedLanguage'.</note>
        <condition type="method">GET</condition>
        <from>/</from>
        <run class="com.letsweb.tutorial.servlet_tomcat.LocaleSetter" />
        <condition type="attribute" name="selectedLocale" operator="equal">/</condition>
        <to type="forward">indexservlet</to>
    </rule>
    
    <rule enabled="true" match-type="wildcard">
        <name>selectedLanguageIsNotDefault</name>
        <note>Runs method and sets atribute 'selectedLanguage'.</note>
        <from>/</from>
        <run class="com.letsweb.tutorial.servlet_tomcat.LocaleSetter" />
        <condition type="attribute" name="selectedLocale" operator="notequal">/</condition>
        <to type="temporary-redirect">%{context-path}%{attribute:selectedLanguage}indexservlet</to>
    </rule>
    
    <rule enabled="true" match-type="regex">
        <name>Index rule 1</name>
        <note>Set locale 2.</note>
        <from>^(/angielski|/en/angielski)$</from>Wszystkiego dobrego w 
        <to type="forward">indexservlet?tk=true</to>
    </rule>
    
     <outbound-rule enabled="true" match-type="regex">
        <name></name>
        <note></note>
        <condition type="parameter" name="tk" operator="equal">true</condition>
        <from>^angielski$</from>
        <to type="forward" last="true" qsappend="false">%{context-path}/en/indexservlet</to>
    </outbound-rule>
    
<!--    <rule enabled="true" match-type="regex" >
        <name>Index rule 2</name>
        <note>Set locale 2.</note>
        <from>^.*/(en|pl)/(.*)?message=alreadyThere$</from>
        <to type="redirect" last="true">%{context-path}/$1/$2?message=alreadyThere</to>
    </rule>-->
    

    
<!--        <rule enabled="true" match-type="regex" >
        <note>Set locale 2.</note>
        <from>^.*/(en|pl)/(.*)$</from>
        <set type="parameter" name="urlrewrite.path.lang">Set locale 2.</set>
        <to type="forward" last="true">%{context-path}/$2?lang=$1&amp;n=$2</to>
    </rule>
    
    <rule enabled="true" match-type="regex" >
        <note>Set locale 2.</note>
        <from>^.*/(en|pl)$</from>
        <set type="parameter" name="urlrewrite.path.lang">Set locale 2.</set>
        <to type="forward" last="true">%{context-path}/index?lang=$1</to>
        <to type="forward" last="true" qsappend="true">index?lang=$1&amp;ref=$2</to>
    </rule>-->

    <!--

    INSTALLATION

        in your web.xml add...

        <filter>
            <filter-name>UrlRewriteFilter</filter-name>
            <filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
            <init-param>
                <param-name>logLevel</param-name>
                <param-value>WARN</param-value>
            </init-param>
        </filter>
        <filter-mapping>
            <filter-name>UrlRewriteFilter</filter-name>
            <url-pattern>/*</url-pattern>
        </filter-mapping>

     EXAMPLES

     Redirect one url
        <rule>
            <from>/some/old/page.html</from>
            <to type="redirect">/very/new/page.html</to>
        </rule>

    Redirect a directory
        <rule>
            <from>/some/olddir/(.*)</from>
            <to type="redirect">/very/newdir/$1</to>
        </rule>

    Clean a url
        <rule>
            <from>/products/([0-9]+)</from>
            <to>/products/index.jsp?product_id=$1</to>
        </rule>
    eg, /products/1234 will be passed on to /products/index.jsp?product_id=1234 without the user noticing.

    Browser detection
        <rule>
            <condition name="user-agent">Mozilla/[1-4]</condition>
            <from>/some/page.html</from>
            <to>/some/page-for-old-browsers.html</to>
        </rule>
    eg, will pass the request for /some/page.html on to /some/page-for-old-browsers.html only for older
    browsers whose user agent srtings match Mozilla/1, Mozilla/2, Mozilla/3 or Mozilla/4.

    Centralised browser detection
        <rule>
            <condition name="user-agent">Mozilla/[1-4]</condition>
            <set type="request" name="browser">moz</set>
        </rule>
    eg, all requests will be checked against the condition and if matched
    request.setAttribute("browser", "moz") will be called.

    -->

</urlrewrite>
