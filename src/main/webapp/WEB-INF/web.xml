<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
    <context-param>
        <description>This parameter determines if template is read from file in each request.</description>
        <param-name>reloadTemplate</param-name>
        <param-value>true</param-value>
    </context-param>
    <context-param>
        <description>This is a logical name for template.</description>
        <param-name>template</param-name>
        <!--<param-value>WEB-INF/template.jsp</param-value>-->
        <param-value>/WEB-INF/freemarker/template.ftl</param-value>
    </context-param>
    <context-param>
        <description>This is a logical name of xml data for css.</description>
        <param-name>csses</param-name>
        <param-value>/WEB-INF/data/xml/css.xml</param-value>
    </context-param>
    <context-param>
        <description>This is a logical name of scripts.</description>
        <param-name>scripts</param-name>
        <param-value>/WEB-INF/data/xml/js-scripts.xml</param-value>
    </context-param>
    <context-param>
        <description>This is a logical name of scripts.</description>
        <param-name>supportedLanguages</param-name>
        <param-value>pl,en,de</param-value>
    </context-param>
    <context-param>
        <description>This is a logical name of scripts.</description>
        <param-name>dbConnectionUrl</param-name>
        <!--<param-value>jdbc:h2:../test;INIT=CREATE SCHEMA IF NOT EXISTS makumba\;SET SCHEMA makumba\;RUNSCRIPT FROM '~/tables.sql';AUTO_SERVER=TRUE;AUTO_SERVER_PORT=9090;USER=sa;PASSWORD=sa</param-value>-->
        <param-value>jdbc:h2:${db.directory}/test;INIT=CREATE SCHEMA IF NOT EXISTS ${dbSchema}\;SET SCHEMA ${dbSchema};AUTO_SERVER=TRUE;AUTO_SERVER_PORT=${dbServerPort};USER=${dbUsername};PASSWORD=${dbPassword}</param-value>
    </context-param>
    <context-param>
        <description>This is a logical name of scripts.</description>
        <param-name>dbUsername</param-name>
        <param-value>${dbUsername}</param-value>
    </context-param>
    <context-param>
        <description>This is a logical name of scripts.</description>
        <param-name>dbPassword</param-name>
        <param-value>${dbPassword}</param-value>
    </context-param>
    <context-param>
        <description>This is a logical name of scripts.</description>
        <param-name>sqlFilePath</param-name>
        <param-value>${dbSqlFilePath}</param-value>
    </context-param>
    <!-- f i l t e r s -->
    <filter>
        <filter-name>TemplateLoaderFilter</filter-name>
        <filter-class>com.letsweb.tutorial.servlet_tomcat.filters.TemplateLoaderFilter</filter-class>
    </filter>
    <filter>
        <filter-name>UrlRewriteFilter</filter-name>
        <filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
        <!-- set the amount of seconds the conf file will be checked for reload
  can be a valid integer (0 denotes check every time,
        empty/not set denotes no reload check) -->
        <init-param>
            <param-name>confReloadCheckInterval</param-name>
            <param-value>0</param-value>
        </init-param>
        <!-- sets up log level (will be logged to context log)
  can be: TRACE, DEBUG, INFO (default), WARN, ERROR, FATAL, log4j, commons, sysout:{level} (ie, sysout:DEBUG)
        if you are having trouble using normal levels use sysout:DEBUG -->
        <init-param>
            <description>Logging level: debug, info</description>
            <param-name>logLevel</param-name>
            <param-value>${tuckeyLogLevel}</param-value>
        </init-param>
        <!-- you can change status path so that it does not
        conflict with your installed apps (note, defaults
        to /rewrite-status) note, must start with / -->
        <init-param>
            <param-name>statusPath</param-name>
            <param-value>/status</param-value>
        </init-param>
        <!-- you can disable status page if desired
        can be: true, false (default true) -->
        <init-param>
            <param-name>statusEnabled</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>UrlRewriteFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
    </filter-mapping>
    <filter-mapping>
        <filter-name>TemplateLoaderFilter</filter-name>
        <servlet-name>freemarker</servlet-name>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
    </filter-mapping>
    <servlet>
        <description>Html templating.</description>
        <servlet-name>freemarker</servlet-name>
        <servlet-class>freemarker.ext.servlet.FreemarkerServlet</servlet-class>
        <!-- FreemarkerServlet settings: -->
        <init-param>
            <param-name>TemplatePath</param-name>
            <param-value>/WEB-INF/freemarker/</param-value>
        </init-param>
        <init-param>
            <param-name>NoCache</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>ContentType</param-name>
            <param-value>text/html; charset=UTF-8</param-value>
            <!-- Forces UTF-8 output encoding! -->
        </init-param>
        <!-- FreeMarker settings: -->
        <!--        <init-param>
            <param-name>incompatible_improvements</param-name>
            <param-value>2.3.21</param-value>
        </init-param>-->
        <init-param>
            <param-name>template_exception_handler</param-name>
            <!-- Some may prefer "html_debug" for development. -->
            <!--<param-value>rethrow</param-value>-->
            <param-value>html_debug</param-value>
        </init-param>
        <init-param>
            <param-name>template_update_delay</param-name>
            <param-value>0</param-value>
            <!-- 0 is for development only! Use higher value otherwise. -->
        </init-param>
        <init-param>
            <param-name>default_encoding</param-name>
            <param-value>UTF-8</param-value>
            <!-- The encoding of the template files. -->
        </init-param>
        <init-param>
            <param-name>number_format</param-name>
            <param-value>0.##########</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>freemarker</servlet-name>
        <url-pattern>*.ftl</url-pattern>
    </servlet-mapping>
    <servlet>
        <description>Json templating.</description>
        <servlet-name>freemarkerForJson</servlet-name>
        <servlet-class>freemarker.ext.servlet.FreemarkerServlet</servlet-class>
        <!-- FreemarkerServlet settings: -->
        <init-param>
            <param-name>TemplatePath</param-name>
            <param-value>/WEB-INF/freemarker/json/</param-value>
        </init-param>
        <init-param>
            <param-name>NoCache</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>ContentType</param-name>
            <param-value>application/json; charset=UTF-8</param-value>
            <!-- Forces UTF-8 output encoding! -->
        </init-param>
        <init-param>
            <param-name>template_exception_handler</param-name>
            <!-- Some may prefer "html_debug" for development. -->
            <!--<param-value>rethrow</param-value>-->
            <param-value>html_debug</param-value>
        </init-param>
        <init-param>
            <param-name>template_update_delay</param-name>
            <param-value>0</param-value>
            <!-- 0 is for development only! Use higher value otherwise. -->
        </init-param>
        <init-param>
            <param-name>default_encoding</param-name>
            <param-value>UTF-8</param-value>
            <!-- The encoding of the template files. -->
        </init-param>
        <init-param>
            <param-name>number_format</param-name>
            <param-value>0.##########</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>freemarkerForJson</servlet-name>
        <url-pattern>*.json</url-pattern>
    </servlet-mapping>
    <!--
      Prevent the visiting of MVC Views from outside the servlet container.
      RequestDispatcher.forward/include should and will still work.
      Removing this may open security holes!
    -->
    <security-constraint>
        <web-resource-collection>
            <web-resource-name>FreeMarker MVC Views</web-resource-name>
            <url-pattern>*.ftl</url-pattern>
            <url-pattern>*.json</url-pattern>
        </web-resource-collection>
        <auth-constraint>
            <!-- Nobody is allowed to visit these -->
        </auth-constraint>
    </security-constraint>
    <security-constraint>
        <display-name>Restricted GET To Employees</display-name>
        <web-resource-collection>
            <web-resource-name>Restricted Access - Get Only</web-resource-name>
            <url-pattern>/restricted/*</url-pattern>
            <url-pattern>/en/restricted/*</url-pattern>
            <url-pattern>/de/restricted/*</url-pattern>
        </web-resource-collection>
        <auth-constraint>
            <role-name>admin</role-name>
        </auth-constraint>
        <user-data-constraint>
            <transport-guarantee>CONFIDENTIAL</transport-guarantee>
            <!--<transport-guarantee>NONE</transport-guarantee>-->
        </user-data-constraint>
    </security-constraint>
    <security-role>
        <role-name>admin</role-name>
    </security-role>
    <security-role>
        <role-name>Employee</role-name>
    </security-role>
    <login-config>
        <auth-method>FORM</auth-method>
        <realm-name>jaas</realm-name>
        <form-login-config>
            <form-login-page>/login.jsp</form-login-page>
            <form-error-page>/login.jsp?failed=true</form-error-page>
        </form-login-config>
    </login-config>
    <session-config>
        <session-timeout>30</session-timeout>
    </session-config>
    <error-page>
        <exception-type>com.letsweb.tutorial.servlet_tomcat.layout.LayoutException</exception-type>
        <location>/layout_exception.html</location>
    </error-page>
    <!-- ===========================================================
            Error Handler
            This forwards all errors to error.jsp
            Note that error.jsp MUST NOT throw an error itself,
            or it causes a second call and is hard to debug.
            Comment this section out when testing changes to
            your error page.
        ============================================================ -->
    <error-page>
        <error-code>400</error-code>
        <location>/error.jsp</location>
    </error-page>
    <error-page>
        <error-code>401</error-code>
        <location>/error.jsp</location>
    </error-page>
    <error-page>
        <error-code>403</error-code>
        <location>/error.jsp</location>
    </error-page>
    <error-page>
        <error-code>404</error-code>
        <location>/error.jsp</location>
    </error-page>
    <error-page>
        <error-code>500</error-code>
        <location>/error.jsp</location>
    </error-page>
    <error-page>
        <error-code>503</error-code>
        <location>/error.jsp</location>
    </error-page>
</web-app>
